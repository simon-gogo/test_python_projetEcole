import streamlit as st
import pandas as pd

# Configuration de la page
st.set_page_config(page_title="Analyse √©nerg√©tique - Oise", layout="wide")

# ==============================================================
# 1) PROBL√âMATIQUE R√âELLE (LIEN AVEC LA SP√âCIALIT√â GRT)
# ==============================================================
st.markdown("##1) Probl√©matique r√©elle (Lien avec la sp√©cialit√© **GRT**")
st.markdown("""### Comment relier les consommations √©nerg√©tiques de certains secteurs des communes de l‚ÄôOise pour pouvoir estimer celles d‚Äôautres secteurs dans ces m√™mes territoires ?""")

# ==============================================================
# 2) FORMULATION DE LA QUESTION PRATIQUE ‚Äî APPROCHE DATA SCIENCE
# ==============================================================
st.markdown("## 2) Formulation de la question pratique (Approche *Data Science*)")
st.markdown("""###
**Techniques mobilis√©es :**
- Traitements de donn√©es  
- Data mining  
- Machine learning  

st.markdown(##**Question pratique :**  
###Comment construire une pr√©diction qui soit bas√©e sur les consommations √©nerg√©tiques 
de plusieurs secteurs r√©partis sur diff√©rentes communes de l‚ÄôOise, afin d‚Äôestimer 
la consommation √©nerg√©tique d‚Äôautres secteurs qui n‚Äôont pas √©t√© mesur√©es ?
""")

# ==============================================================
# TRAITEMENTS DE DONN√âES
# ==============================================================

st.markdown("## ‚öôÔ∏è Traitements de donn√©es")
st.markdown("""
R√©aliser un pr√©-traitement des donn√©es √©nerg√©tiques en :  

- **Les nettoyant** : compl√©ter les donn√©es √©nerg√©tiques issues du fichier CSV, 
  qui sont manquantes, bruit√©es, aberrantes ou incoh√©rentes.  
- **Les int√©grant** : combiner les diff√©rentes colonnes et fichiers li√©s √† la question pratique.  
- **Les transformant** : ajuster les valeurs pour les ins√©rer dans un intervalle pr√©cis.  
- **Les r√©duisant** : rendre les donn√©es moins volumineuses et plus accessibles.  
- **Les discr√©tisant** : cr√©er diff√©rentes √©tiquettes de consommation (ou cat√©gories) 
  pour remplacer les intervalles continus par des classes.
""")

# ==============================================================
# √âTAPES DE TRAITEMENT
# ==============================================================
st.markdown("## üìä √âtapes de traitement √† r√©aliser pour y r√©pondre")
st.markdown("""#
1. Nettoyage et pr√©paration des donn√©es *(pandas, numpy)*  
2. Analyse statistique descriptive *(moyenne, m√©diane, √©cart-type)*  
3. Visualisation temporelle *(matplotlib, seaborn)*  
4. Calcul d‚Äôindicateurs de performance √©nerg√©tique  
""")

st.info("‚ÑπÔ∏è Ces √©tapes serviront de base pour d√©velopper le mod√®le pr√©dictif des consommations √©nerg√©tiques.")

st.header("mon application")
st.title("Bonjour √† tous !")
st.write('Mineure num√©rique')

nombres = [1, 2, 3, 4]
carre = [1**1, 2**2, 3**3, 4**4]

d = {"nombres" : nombres, "carr√©" : carre}
data = pd.DataFrame(d)

st.dataframe(data)
